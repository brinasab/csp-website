head(mpg)
library(ggplot2)
data(mpg)
head(mpg)
head(mpg)
library(ggplot2)
ggplot(data = mpg) +
geom_point(aes(x = displ, y = hwy)) +
labs(title = "Car Fuel Efficiency on the Highway vs. Car Engine Size",
x = "Car Engine Size in Liters",
y = "Car Highway MPG (Fuel Efficiency)")
library(ggplot2)
data(mpg)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, color = class))
library(ggplot2)
data(mpg)
ggplot(mpg) +
geom_point(aes(x = displ, y = cty, color = class))
library(ggplot2)
data(mpg)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, color = class))
penguins_adelie <- filter(.data = penguins, species == "Adelie")
penguins_adelie <- filter(.data = penguins, species == "Adelie")
penguins_sex <- group_by(.data = penguins, sex)
library(tidyverse)
library(palmerpenguins)
penguins_adelie <- filter(.data = penguins, species == "Adelie")
penguins_adelie_sex <- group_by(.data = penguins_adelie, sex)
summarize(
.data = penguins_adelie_sex,
avg_bill = mean(bill_length_mm, na.rm = TRUE),
avg_mass = mean(body_mass_g, na.rm = TRUE)
)
penguins_sex <- group_by(.data = penguins, sex)
penguins_sex_adelie <- filter(.data = penguins_sex, species == "Adelie")
results <- summarize(
.data = penguins_sex_adelie,
avg_bill = mean(bill_length_mm, na.rm = TRUE),
avg_mass = mean(body_mass_g, na.rm = TRUE)
)
print(results)
penguins_sex <- group_by(.data = penguins, sex)
penguins_sex_adelie <- filter(.data = penguins_sex, species == "Adelie")
results <- summarize(
.data = penguins_sex_adelie,
avg_bill = mean(bill_length_mm, na.rm = TRUE),
avg_mass = mean(body_mass_g, na.rm = TRUE)
)
penguins_sex <- group_by(.data = penguins, sex)
penguins_sex_adelie <- filter(.data = penguins_sex, species == "Adelie")
results <- summarize(
.data = penguins_sex_adelie,
avg_bill = mean(bill_length_mm, na.rm = TRUE),
avg_mass = mean(body_mass_g, na.rm = TRUE)
)
results
penguins |>
filter(species == "Adelie") |>
group_by(sex) |>
summarize(avg_mass = mean(body_mass_g, na.rm = TRUE))
penguins |>
group_by(species) |>
filter(species == "Adelie") |>
group_by(sex) |>  # overrides previous group
summarize(avg_mass = mean(body_mass_g, na.rm = TRUE))
penguins |>
group_by(species) |>
filter(species == "Adelie") |>
summarize(avg_mass = mean(body_mass_g, na.rm = TRUE))
penguins |>
group_by(sex) |>
filter(species == "Adelie") |>
summarize(avg_mass = mean(body_mass_g, na.rm = TRUE))
penguins |>
group_by(species, sex) |>
summarize(avg_mass = mean(body_mass_g, na.rm = TRUE)) |>
filter(species == "Adelie")
penguins |>
group_by(species, sex) |>
filter(species == "Adelie") |>
summarize(avg_mass = mean(body_mass_g, na.rm = TRUE))
penguins |>
group_by(species, sex) |>
summarize(avg_mass = mean(body_mass_g, na.rm = TRUE))
group_by(penguins, sex)
group_by(penguins, sex)
all_by_sex <- group_by(penguins, sex)
all_by_sex
all_by_sex
group_by(penguins, species)
adelie_only <- filter(penguins, species == "Adelie")
adelie_by_sex <- group_by(adelie_only, sex)
adelie_by_sex
adelie_by_sex
# Load required package
library(ggplot2)
# Create a small survey dataset
survey <- data.frame(
age = c(25, 30, 35, 40, 45, 50, 55, 60),
income = c(28, 35, 40, 50, 52, 60, 58, 65),
education = c("High School", "College", "College", "Graduate",
"High School", "Graduate", "College", "High School")
)
# Plot
ggplot(data = survey) +
geom_point(
mapping = aes(x = age, y = income, color = education),
stat = "identity",
position = "identity"
) +
geom_smooth(
mapping = aes(x = age, y = income),
method = "lm"
)
ggplot(data = survey, mapping = aes(x = age, y = income)) +
geom_point(color = education) +
geom_smooth(method = "lm")
# correct
ggplot(data = survey, mapping = aes(x = age, y = income)) +
geom_point(aes(color = education) +
geom_smooth(method = "lm")
ggplot(data = survey, mapping = aes(x = age, y = income)) +
ggplot(data = survey, mapping = aes(x = age, y = income)) +
geom_point(mapping = aes(color = education)) +
geom_smooth(method = "lm")
# Plot
ggplot(data = survey) +
geom_point(
mapping = aes(x = age, y = income, color = education),
stat = "identity",
position = "identity"
) +
geom_smooth(
mapping = aes(x = age, y = income),
method = "lm"
)
# correct
ggplot(data = survey, mapping = aes(x = age, y = income, color = education)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = survey, mapping = aes(x = age, y = income,
color = education)) +
geom_point() +
geom_smooth(method = "lm")
# Load required package
library(ggplot2)
# Create a small survey dataset
survey <- tibble(
age = c(25, 30, 35, 40, 45, 50, 55, 60),
income = c(28, 35, 40, 50, 52, 60, 58, 65),
education = c("High School", "College", "College", "Graduate",
"High School", "Graduate", "College", "High School")
)
# Plot given in the question
ggplot(data = survey) +
geom_point(
mapping = aes(x = age, y = income, color = education),
stat = "identity",
position = "identity"
) +
geom_smooth(
mapping = aes(x = age, y = income),
method = "lm"
)
# Correct: x and y global, color is local
ggplot(data = survey, mapping = aes(x = age, y = income)) +
geom_point(mapping = aes(color = education)) +
geom_smooth(method = "lm")
# Plot given in the question
ggplot(data = survey) +
geom_point(
mapping = aes(x = age, y = income, color = education),
stat = "identity",
position = "identity"
) +
geom_smooth(
mapping = aes(x = age, y = income),
method = "lm"
)
ggplot(data = survey, mapping = aes(x = age, y = income)) +
geom_point(mapping = aes(color = education)) +
geom_smooth(method = "lm")
ggplot(data = survey, mapping = aes(x = age, y = income,
color = education)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = survey, mapping = aes(x = age, y = income)) +
geom_point(color = education) +
geom_smooth(method = "lm")
ggplot(data = survey) +
geom_point(mapping = aes(x = age, y = income, color = education)) +
geom_smooth(method = "lm")
ggplot(data = survey, mapping = aes(x = age, y = income)) +Â 
ggplot(data = survey, mapping = aes(x = age, y = income) +
geom_point(aes(color = education)) +
geom_smooth(method = "lm")
ggplot(data = survey, mapping = aes(x = age, y = income) +
geom_point(aes(color = education)) +
geom_smooth(method = "lm")
ggplot(data = survey, mapping = aes(x = age, y = income)) +
ggplot(data = survey, mapping = aes(x = age, y = income)) +
geom_point(mapping = aes(color = education)) +
geom_smooth(method = "lm")
# Correct: x and y global, color is local
ggplot(data = survey, mapping = aes(x = age, y = income)) +
geom_point(aes(color = education)) +
geom_smooth(method = "lm")
# Correct: x and y global, color is local
ggplot(data = survey, mapping = aes(x = age, y = income)) +
geom_point(aes(color = education)) +
geom_smooth(method = "lm")
ggplot(data = survey, mapping = aes(x = age, y = income)) +
geom_point(mapping = aes(color = education)) +
geom_smooth(method = "lm")
ggplot(data = survey, mapping = aes(x = age, y = income)) +
geom_point(aes(color = education)) +
geom_smooth(method = "lm")
ggplot(data = survey, mapping = aes(x = age, y = income, color = education)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = survey, mapping = aes(x = age, y = income)) +
geom_point(color = education) +
geom_smooth(method = "lm")
ggplot(data = survey) +
geom_point(mapping = aes(x = age, y = income, color = education)) +
geom_smooth(method = "lm")
ggplot(data = survey) +
geom_point(mapping = aes(color = education)) +
geom_smooth(mapping = aes(x = age, y = income)),
ggplot(data = survey) +
geom_point(mapping = aes(color = education)) +
geom_smooth(mapping = aes(x = age, y = income),
method = "lm")
filter(penguins, species == "Adelie" & species == "Chinstrap")
penguins
filter(penguins, species == "Adelie" & species == "Chinstrap")
filter(penguins, species == "Adelie" | species == "Chinstrap")
View(adelie_by_sex)
filter(.data = penguins, species == "Adelie" & species == "Chinstrap")
filter(.data = penguins, species == "Adelie" | species == "Chinstrap")
by_species <- group_by(penguins, species)
filtered <- filter(by_species, mean(body_mass_g, na.rm = TRUE) > 4000)
filtered
by_species <- group_by(penguins, species)
summary <- summarize(by_species, avg_mass = mean(body_mass_g, na.rm = TRUE))
filtered_summary <- filter(summary, avg_mass > 4000)
filtered_summary
summary
filtered
filtered
by_species <- group_by(penguins, species)
avg_bill_high <- filter(by_species, mean(bill_length_mm, na.rm = TRUE) > 40)
result <- summarize(avg_bill_high,
avg_mass = mean(body_mass_g, na.rm = TRUE))
result
avg_bill_high
by_species <- group_by(penguins, species)
avg_bill_high <- filter(by_species, mean(bill_length_mm, na.rm = TRUE) > 50)
result <- summarize(avg_bill_high,
avg_mass = mean(body_mass_g, na.rm = TRUE))
avg_bill_high
result
by_species <- group_by(penguins, species)
avg_bill_high <- filter(by_species, mean(bill_length_mm, na.rm = TRUE) > 40)
result <- summarize(avg_bill_high,
avg_mass = mean(body_mass_g, na.rm = TRUE))
avg_bill_high
result
penguins
penguins %>%
group_by(species, sex) %>%
summarize(avg_mass = mean(body_mass_g, na.rm = TRUE))
remotes::install_github("css-materials/rcis")
# with faceted histogram
ggplot(data = scorecard, mapping = aes(x = satavg)) +
geom_histogram() +
facet_wrap(facets = vars(type))
library(tidyverse)
library(rcis)
data(scorecard)
scorecard |> count(type)
library(dplyr)
scorecard %>%
filter(type == "Private, for-profit") %>%
select(name, state, type, satavg, cost)
library(dplyr)
scorecard %>%
filter(str_detect(name, regex("Chicago", ignore_case = TRUE))) %>%
select(name, state, type, satavg, cost)
library(dplyr)
scorecard %>%
filter(str_detect(name, regex("Chicago", ignore_case = TRUE))) %>%
select(name, state, type, satavg, cost)
library(dplyr)
scorecard %>%
filter(str_detect(name, regex("Chicago", ignore_case = TRUE))) %>%
select(name, type)
scorecard %>%
filter(name == "University of Chicago")
filter(scorecard, name == "University of Chicago")
scorecard %>%
group_by(type) %>%
summarize(mean_type = mean(satavg, na.rm = TRUE))
library(rcis)
data(mass_shooting)
data("mass_shooting")
data("mass_shootings")
data(mass_shootings)
library(rcis)
data(scorecard)
ggplot(data = scorecard %>% count(type),
aes(x = reorder(type, desc(n)), y = n)) +
geom_bar(stat = "identity")
ggplot(data = scorecard %>% count(type),
aes(x = reorder(type, desc(n)), y = n))
x1 <- c("Dec", "Apr", "Jan", "Mar")
month_levels <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
y1 <- factor(x1, levels = month_levels)
# check
sort(x1)
sort(y1)
class(x1)
class(y1)
typeof(x1)
typeof(y1)
library(tidyverse)
df <- tibble(
week = c("Mon", "Wed", "Fri", "Wed", "Thu", "Sat", "Sat"),
tip = c(10, 12, 20, 8, 25, 25, 30)
)
df
ggplot(df, aes(x = week, y = tip)) +
geom_bar()
ggplot(df, aes(x = week)) +
geom_bar()
days <- c("Mon", "Wed", "Thu", "Fri", "Sat")
df %>%
mutate(week = fct_relevel(week, days )) %>%   # your order here
ggplot(aes(x = week, y = tip)) +
geom_bar(stat = "identity") +
labs(title = "Tips by Weekday", x = "Weekday", y = "Tip ($)")
ggplot(df, aes(x = week)) +
geom_bar(stat = "identity")
ggplot(df, aes(x = week, y = tips)) +
geom_bar(stat = "identity")
ggplot(df, aes(x = week, y = tip)) +
geom_bar(stat = "identity")
days <- c("Mon", "Wed", "Thu", "Fri", "Sat")
df %>%
mutate(week = fct_relevel(week, days )) %>%   # your order here
ggplot(aes(x = week, y = tip)) +
geom_bar(stat = "identity") +
labs(title = "Tips by Weekday", x = "Weekday", y = "Tip ($)")
days <- c("Mon", "Wed", "Thu", "Fri", "Sat")
df %>%
mutate(week = fct_relevel(week, days )) %>%   # your order here
ggplot(aes(x = week, y = tip)) +
geom_bar(stat = "identity") +
labs(title = "Tips by Weekday", x = "Weekday", y = "Tip ($)")
df %>%
mutate(week = days) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
df %>%
mutate(week = day) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
df %>%
mutate(week = factor(week, days)) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
df %>%
mutate(week = factor(week, days)) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
df %>%
mutate(week = factor(week, days)) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
df %>%
mutate(week = factor(week, days)) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
df %>%
mutate(week = factor(week, days)) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
df %>%
mutate(week = factor(week, days)) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
df %>%
mutate(week = factor(week, days)) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
df %>%
mutate(week = factor(week, days)) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
days <- c("Mon", "Wed", "Thu", "Fri", "Sat")
df %>%
mutate(week = fct_relevel(week, days )) %>%   # your order here
ggplot(aes(x = week, y = tip)) +
geom_bar(stat = "identity") +
labs(title = "Tips by Weekday", x = "Weekday", y = "Tip ($)")
df %>%
mutate(week = factor(week, days)) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
days <- c("Mon", "Wed", "Thu", "Fri", "Sat")
df %>%
mutate(week = fct_relevel(week, days )) %>%   # your order here
ggplot(aes(x = week, y = tip)) +
geom_bar(stat = "identity") +
labs(title = "Tips by Weekday", x = "Weekday", y = "Tip ($)")
df %>%
mutate(week = factor(week, days)) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
days <- c("Mon", "Wed", "Thu", "Fri", "Sat")
df %>%
mutate(week = fct_relevel(week, days )) %>%   # your order here
ggplot(aes(x = week, y = tip)) +
geom_bar(stat = "identity") +
labs(title = "Tips by Weekday", x = "Weekday", y = "Tip ($)")
df %>%
mutate(week = factor(week, days)) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
df %>%
mutate(week = factor(week, days)) %>%   # factor() or fct_relevel()
group_by(week) %>%
summarize(total_tip = sum(tip)) %>%
ggplot(aes(x = week, y = total_tip)) +
geom_bar(stat = "identity") +
labs(title = "Total Tips by Weekday", x = "Weekday", y = "Total Tip ($)")
days <- c("Mon", "Wed", "Thu", "Fri", "Sat")
df %>%
mutate(week = fct_relevel(week, days )) %>%   # your order here
ggplot(aes(x = week, y = tip)) +
geom_bar(stat = "identity") +
labs(title = "Tips by Weekday", x = "Weekday", y = "Tip ($)")
df <- tibble(
week = c("Mon", "Wed", "Fri", "Wed", "Thu", "Sat", "Sat"),
tip = c(10, 12, 20, 8, 25, 25, 30)
)
df
ggplot(df, aes(x = week)) +
geom_bar()
ggplot(df, aes(x = week, y = tip)) +
geom_bar(stat = "identity") +
labs(title = "Tips by Weekday", x = "Weekday", y = "Tip ($)")
days <- c("Mon", "Wed", "Thu", "Fri", "Sat")
df %>%
mutate(week = fct_relevel(week, days )) %>%   # your order here
ggplot(aes(x = week, y = tip)) +
geom_bar(stat = "identity") +
labs(title = "Tips by Weekday", x = "Weekday", y = "Tip ($)")
df %>%
mutate(week = fct_relevel(week, "Mon", "Wed", "Thu", "Fri", "Sat")) %>%
ggplot(aes(x = week, y = tip)) +
geom_bar(stat = "identity") +
labs(title = "Tips by Weekday", x = "Weekday", y = "Tip ($)") +
theme_minimal()
days <- c("Mon", "Wed", "Thu", "Fri", "Sat")
df %>%
mutate(week = factor(week, days)) %>%   # fill in the order
ggplot(aes(x = week, y = tip)) +
geom_bar(stat = "identity")
df
